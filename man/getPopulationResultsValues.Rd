% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-simulation-results.R
\name{getPopulationResultsValues}
\alias{getPopulationResultsValues}
\title{Get simulated values of molecules or parameters.}
\usage{
getPopulationResultsValues(simulationResults, quantitiesOrPaths,
  individualIds = NULL)
}
\arguments{
\item{simulationResults}{Object of type \code{SimulationResults} produced by calling \code{runSimulation}
on a \code{Simulation} object.}

\item{quantitiesOrPaths}{Quantity instances (element or vector) (typically retrieved using
\code{getAllQuantitiesMatching}) or quantity path (element or vector of strings) for which the results are to be returned.
When providing the paths, only absolute full paths are supported (i.e., no matching with '*' possible)}

\item{individualIds}{\code{numeric} IDs of individiuals for which the results should be extracted.
By default, all individuals from the results are considered. If the individual with the provided ID is not found, the ID is ignored}
}
\value{
A list of results, each entry having the name of a quantity path and consisting of the element \code{x} being the time values (in minutes)
and the element \code{y} a \code{NxM} matrix of simulated values, with \code{N} the number of entries (equals the number of output time steps)
and \code{M} the number of individuals. If no individual contains the results for a given path, the value of the element is \code{NULL}
}
\description{
Return values for given entities generated in a population simulation.
}
\details{
The function receives an object of simulation results generated by running the simulation
and returns time-values profiles for the chosen quantities. Results of a simulation
of a single individual is treated as a population simulation with only one individual.
}
\examples{
simPath <- system.file("extdata", "simple.pkml", package = "ospsuite")
sim <- loadSimulation(simPath)
simResults <- runSimulation(sim)

paths <- "Organism|Volume"

resultsValues <- getPopulationResultsValues(simResults, paths, individualIds = 0)
plot(resultsValues[[paths]])
}
\seealso{
\code{\link{getResultsValues}}
}
